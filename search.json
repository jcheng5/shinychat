[{"path":"https://jcheng5.github.io/shinychat/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Posit Software, PBC Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jcheng5.github.io/shinychat/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joe Cheng. Author, maintainer. Carson Sievert. Author. Posit Software, PBC. Copyright holder, funder.","code":""},{"path":"https://jcheng5.github.io/shinychat/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cheng J, Sievert C (2024). shinychat: Chat UI Component Shiny. R package version 0.0.0.9000, https://jcheng5.github.io/shinychat/, https://github.com/jcheng5/shinychat.","code":"@Manual{,   title = {shinychat: Chat UI Component for Shiny},   author = {Joe Cheng and Carson Sievert},   year = {2024},   note = {R package version 0.0.0.9000, https://jcheng5.github.io/shinychat/},   url = {https://github.com/jcheng5/shinychat}, }"},{"path":"https://jcheng5.github.io/shinychat/index.html","id":"shinychat","dir":"","previous_headings":"","what":"Chat UI Component for Shiny","title":"Chat UI Component for Shiny","text":"Chat UI component Shiny R. (Shiny Python, see ui.Chat.)","code":""},{"path":"https://jcheng5.github.io/shinychat/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Chat UI Component for Shiny","text":"can install development version shinychat GitHub :","code":"# install.packages(\"pak\") pak::pak(\"jcheng5/shinychat\")"},{"path":"https://jcheng5.github.io/shinychat/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Chat UI Component for Shiny","text":"run example, ’ll first need create OpenAI API key, set environment OPENAI_API_KEY. ’ll also need call pak::pak(\"tidyverse/elmer\") install {elmer} package.","code":"library(shiny) library(shinychat)  ui <- bslib::page_fluid(   chat_ui(\"chat\") )  server <- function(input, output, session) {   chat <- elmer::chat_openai(system_prompt = \"You're a trickster who answers in riddles\")      observeEvent(input$chat_user_input, {     stream <- chat$stream_async(input$chat_user_input)     chat_append(\"chat\", stream)   }) }  shinyApp(ui, server)"},{"path":"https://jcheng5.github.io/shinychat/reference/chat_append.html","id":null,"dir":"Reference","previous_headings":"","what":"Append an assistant response to a chat control — chat_append","title":"Append an assistant response to a chat control — chat_append","text":"Append assistant response chat control","code":""},{"path":"https://jcheng5.github.io/shinychat/reference/chat_append.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append an assistant response to a chat control — chat_append","text":"","code":"chat_append(id, response, session = getDefaultReactiveDomain())"},{"path":"https://jcheng5.github.io/shinychat/reference/chat_append.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append an assistant response to a chat control — chat_append","text":"id ID chat element response message message stream append chat element session Shiny session object","code":""},{"path":"https://jcheng5.github.io/shinychat/reference/chat_append_message.html","id":null,"dir":"Reference","previous_headings":"","what":"Low-level function to append a message to a chat control — chat_append_message","title":"Low-level function to append a message to a chat control — chat_append_message","text":"advanced users want control message chunking behavior. users use chat_append() instead.","code":""},{"path":"https://jcheng5.github.io/shinychat/reference/chat_append_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Low-level function to append a message to a chat control — chat_append_message","text":"","code":"chat_append_message(   id,   msg,   chunk = FALSE,   operation = NULL,   session = getDefaultReactiveDomain() )"},{"path":"https://jcheng5.github.io/shinychat/reference/chat_append_message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Low-level function to append a message to a chat control — chat_append_message","text":"id ID chat element msg message append. named list role content fields. role field either \"user\" \"assistant\". content field string containing message content, Markdown format. chunk Whether msg just chunk message, , type. FALSE, msg complete message. \"start\", msg first chunk multi-chunk message. \"end\", msg last chunk multi-chunk message. TRUE, msg intermediate chunk multi-chunk message. Default FALSE. operation operation perform message. NULL, msg replaces latest message. \"append\", msg appended latest message. Default NULL. session Shiny session object","code":""},{"path":"https://jcheng5.github.io/shinychat/reference/chat_append_message.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Low-level function to append a message to a chat control — chat_append_message","text":"Returns nothing consequence.","code":""},{"path":"https://jcheng5.github.io/shinychat/reference/chat_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a chat UI element — chat_ui","title":"Create a chat UI element — chat_ui","text":"Create chat UI element","code":""},{"path":"https://jcheng5.github.io/shinychat/reference/chat_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a chat UI element — chat_ui","text":"","code":"chat_ui(   id,   ...,   messages = NULL,   placeholder = \"Enter a message...\",   width = \"min(680px, 100%)\",   height = \"auto\",   fill = TRUE )"},{"path":"https://jcheng5.github.io/shinychat/reference/chat_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a chat UI element — chat_ui","text":"id ID chat element ... Extra HTML attributes include chat element messages list messages prepopulate chat . message can string named list content role fields. placeholder placeholder text chat's user input field width CSS width chat element height CSS height chat element fill Whether chat element try vertically fill container, container fillable","code":""},{"path":"https://jcheng5.github.io/shinychat/reference/chat_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a chat UI element — chat_ui","text":"Shiny tag object, suitable inclusion Shiny UI","code":""}]
